swagger: '2.0'
info:
  description: |
    This is a sample Petstore server.  You can find
    out more about Swagger at
    [http://swagger.io](http://swagger.io) or on
    [irc.freenode.net, #swagger](http://swagger.io/irc/).
  version: "1.0.1"
  title: Swagger Petstore
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
# host: petstore.swagger.io
# basePath: /v2
# schemes:
# - http
paths:
  /employee:
    post:
      tags:
      - employee
      summary: Add a new employee to the database
      operationId: addEmployee
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Employee object that needs to be added to the database
        required: true
        schema:
          $ref: '#/definitions/Employee'
      responses:
        405:
          description: Invalid input
      security:
      - petstore_auth:
        - write:pets
        - read:pets
    put:
      tags:
      - employee
      summary: Update an existing employee
      operationId: updateEmployee
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Employee object that needs to be update to the database
        required: true
        schema:
          $ref: '#/definitions/Employee'
      responses:
        400:
          description: Invalid ID supplied
        404:
          description: Employee not found
        405:
          description: Validation exception
      security:
      - petstore_auth:
        - write:pets
        - read:pets
    get:
        tags:
        - employee
        summary: Finds all employees
        description: Get all employees
        operationId: findEmployees
        produces:
        - application/json
        parameters: []
        responses:
          200:
            description: successful operation
            schema:
              type: array
              items:
                $ref: '#/definitions/Employee'
          400:
            description: Invalid status value
        security:
        - petstore_auth:
          - read:pets
securityDefinitions:
  petstore_auth:
    type: oauth2
    authorizationUrl: http://petstore.swagger.io/oauth/dialog
    flow: implicit
    scopes:
      write:pets: modify pets in your account
      read:pets: read your pets
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  Employee:
    type: object
    required:
    - firstName
    - lastName
    properties:
      id:
        type: integer
        format: int64
      firstName:
        type: string
        example: Jean
      lastName:
        type: string
        example: Dupont
      source:
        $ref: '#/definitions/Source'
      nationality:
        type: string
        example: fran√ßais
      jobBoard:
        $ref: '#/definitions/JobBoard'
      status:
        type: string
        description: employee status in the database
        enum:
        - go
        - no go
        - ko
      certifications:
        type: array
        xml:
          name: tag
          wrapped: true
        items:
          $ref: '#/definitions/Certification'
      school:
        $ref: '#/definitions/School'
      jobGlobal:
        $ref: '#/definitions/JobGlobal'
      jobDetails:
        type: array
        xml:
          name: tag
          wrapped: true
        items:
          $ref: '#/definitions/JobDetail'
      shoots:
        type: array
        xml:
          name: tag
          wrapped: true
        items:
          $ref: '#/definitions/Shoot'
      shootRecaps:
        type: array
        xml:
          name: tag
          wrapped: true
        items:
          $ref: '#/definitions/ShootRecap'
      interviews:
        type: array
        xml:
          name: tag
          wrapped: true
        items:
          $ref: '#/definitions/Interview'
      histories:
        type: array
        xml:
          name: tag
          wrapped: true
        items:
          $ref: '#/definitions/History'
      updateddAt:
        type: string
        example: 22-02-2018
      new:
        type: boolean
      active:
        type: boolean
      display:
        type: boolean
      preshoots:
        type: array
        xml:
          name: tag
          wrapped: true
        items:
          $ref: '#/definitions/PreShoot'
      qcm:
        type: array
        xml:
          name: tag
          wrapped: true
        items:
          $ref: '#/definitions/Qcm'
      cv:
        type: string
        example: cv.docx
      dt:
        type: string
        example: dt_david.docx
      cv_plainame:
        type: string
        example: cv.docx
      dt_plainame:
        type: string
        example: dt_david.docx
      email:
        type: string
        example: monmail@testemail.com
      telephone:
        type: string
        example: 0102030405
      engineer:
        $ref: '#/definitions/Engineer'
  Source:
    type: object
    required:
    - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        example: CDR
      employees:
        $ref: '#/definitions/Employee'
  JobBoard:
    type: object
    required:
    - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        example: LinkeDin
      employees:
        $ref: '#/definitions/Employee'
  Certification:
    type: object
    required:
    - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        example: Certified scrum master
      employees:
        $ref: '#/definitions/Employee'
  School:
    type: object
    required:
    - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        example: Polytech Paris
      country:
        type: string
        example: France
      category:
        type: string
        example: G1
      rank:
        type: string
        example: A
      employees:
        $ref: '#/definitions/Employee'
      besoins:
        $ref: '#/definitions/Besoin'
  JobGlobal:
    type: object
    required:
    - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        example: Developpeur
      employees:
        $ref: '#/definitions/Employee'
      shoots:
        $ref: '#/definitions/Shoot'
  JobDetail:
    type: object
    required:
    - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        example: developpeur
      employees:
        $ref: '#/definitions/Employee'
      besoins:
        $ref: '#/definitions/Besoin'
  Shoot:
    type: object
    required:
    - status
    properties:
      id:
        type: integer
        format: int64
      status:
        type: string
        example: en cours
      comment:
        type: string
        example: commentaire
      jobGlobal:
        $ref: '#/definitions/JobGlobal'
      date:
        type: string
        example: 22-02-2018
      time:
        type: string
        example: 22-02-2018
      client:
        $ref: '#/definitions/Client'
      manager:
        $ref: '#/definitions/User'
      employee:
        $ref: '#/definitions/Employee'
      besoin:
        $ref: '#/definitions/Besoin'
      dateRT:
        type: string
        example: 22-02-2018
      dateReponseClient:
        type: string
        example: 22-02-2018
      preShoot:
        $ref: '#/definitions/PreShoot'
  ShootRecap:
    type: object
    required:
    - status
    properties:
      id:
        type: integer
        format: int64
      status:
        type: string
        example: en cours
      comment:
        type: string
        example: commentaire
      date:
        type: string
        example: 22-02-2018
      client:
        $ref: '#/definitions/Client'
      manager:
        $ref: '#/definitions/User'
      employee:
        $ref: '#/definitions/Employee'
      dateRT:
        type: string
        example: 22-02-2018
      eures:
        type: boolean
      rejected:
        type: boolean
      active:
        type: boolean
      sendByCdr:
        type: boolean
  Interview:
    type: object
    required:
    - type
    properties:
      id:
        type: integer
        format: int64
      manager:
        $ref: '#/definitions/User'
      type:
        type: string
        example: EC1
      status:
        type: string
        example: todo
      physical:
        type: boolean
      comment:
        type: string
        example: commentaire
      dateEc:
        type: string
        example: 22-02-2018
      employee:
        $ref: '#/definitions/Employee'
  History:
    type: object
    required:
    - object
    properties:
      id:
        type: integer
        format: int64
      manager:
        $ref: '#/definitions/User'
      object:
        type: string
        example: Employee
      new:
        type: boolean
      label:
        type: string
        example: label
      date:
        type: string
        example: 22-02-2018
      employee:
        $ref: '#/definitions/Employee'
      historyChanges:
        $ref: '#/definitions/HistoryChange'
  PreShoot:
    type: object
    required:
    - status
    properties:
      id:
        type: integer
        format: int64
      status:
        type: string
        example: en cours
      comment:
        type: string
        example: commentaire
      date:
        type: string
        example: 22-02-2018
      startDate:
        type: string
        example: 22-02-2018
      endDate:
        type: string
        example: 22-02-2018
      client:
        $ref: '#/definitions/Client'
      manager:
        $ref: '#/definitions/User'
      employee:
        $ref: '#/definitions/Employee'
      active:
        type: boolean
      paused:
        type: boolean
      timeout:
        type: boolean
      nok:
        type: boolean
      shoot:
        $ref: '#/definitions/PreShoot'
      flowOrder:
        type: integer
        format: int64
  Qcm:
    type: object
    required:
    - code
    properties:
      id:
        type: integer
        format: int64
      code:
        type: string
        example: qcm-42
      comment:
        type: string
        example: commentaire
      name:
        type: string
        example: QCM PHP
      score:
        type: string
        example: 42
      scoreFraction:
        type: string
        example: 42%
      scoreFractionTime:
        type: string
        example: 0h42min
      dateFinished:
        type: string
        example: 22-02-2018
      employee:
        $ref: '#/definitions/Employee'
  Engineer:
    type: object
    required:
    - matricule
    - firstName
    - lastName
    properties:
      id:
        type: integer
        format: int64
      matricule:
        type: string
        example: 842042h
      firstName:
        type: string
        example: Jean
      lastName:
        type: string
        example: Dupont
      gender:
        type: string
        example: male
      dateHired:
        type: string
        example: 01-02-2018
      manager:
        $ref: '#/definitions/User'
      seniority:
        type: string
        example: 2ans
      firstExperience:
        type: string
        example: 01-02-2018
      totalExperience:
        type: string
        example: 2ans
      client:
        type: string
        example: Amadeus
      coefficient:
        type: string
        example: 2.2
      salary:
        type: string
        example: 40K
      dob:
        type: string
        example: 01-02-2018
      age:
        type: string
        example: 42
      nationality:
        type: string
        example: fran√ßaise
      origin:
        type: string
        example: PACA
      school:
        $ref: '#/definitions/School'
      dateGraduation:
        type: string
        example: 02-03-2018
      chez:
        type: string
        example: Chez M. Dupont
      address1:
        type: string
        example: 42 route des Lucioles
      address2:
        type: string
        example: Bat les √©colucioles b2
      codePostale:
        type: string
        example: 06560
      ville:
        type: string
        example: Valbonne
      telephone:
        type: string
        example: 0102030405
      personnalEmail:
        type: string
        example: jean.dupont@gmail.com
      progessionalEmail:
        type: string
        example: jean.dupont@alten.com
      title:
        type: string
        example: M.
      active:
        type: boolean
      exitDate:
        type: string
        example: 22-02-2018
      exitMotive:
        type: string
        example: Personnal
      exitComment:
        type: string
        example: Wife moving from another city
      employee:
        $ref: '#/definitions/Employee'
      isRsi:
        type: boolean
      rsi:
        $ref: '#/definitions/Engineer'
      signed:
        type: string
        example: oui
      isPrev:
        type: boolean
      prevLastDate:
        type: string
        example: 22-02-2018
      createdDate:
        type: string
        example: 22-02-2018
      suspendedContract:
        type: boolean
      rc:
        $ref: '#/definitions/User'
      notation:
        type: string
        example: dt_david.docx
  Besoin:
    type: object
    required:
    - name
    properties:
      id:
        type: integer
        format: int64
      manager:
        $ref: '#/definitions/User'
      client:
        $ref: '#/definitions/Client'
      name:
        type: string
        example: Dev PHP/Symfony
      availability:
        type: string
        example: 01-02-2018
      jobGlobal:
        $ref: '#/definitions/JobGlobal'
      jobDetail:
        $ref: '#/definitions/JobDetail'
      notification:
        $ref: '#/definitions/Notification'
      schoolGroup:
        type: array
        xml:
          name: tag
          wrapped: true
        items:
          type: string
      experience:
        type: string
        example: Amadeus
      salary:
        type: string
        example: 40K
      lang:
        type: string
        description: lang need
        enum:
        - FR
        - FR/EN
        - EN
      nationality:
        type: string
        example: fran√ßaise
      availabiltyDate:
        type: string
        example: 02-03-2018
      jobDetailWeight:
        type: string
        example: 42
      experienceWeight:
        type: string
        example: 42
      salaryWeight:
        type: string
        example: 42
      langWeight:
        type: string
        example: 42
      schoolWeight:
        type: string
        example: 42
      availabilityWeight:
        type: string
        example: 42
      nationalityWeight:
        type: string
        example: 42
      extraSkills:
        type: string
        example: script bash
      comment:
        type: string
        example: commentaire
      active:
        type: boolean
  Client:
    type: object
    required:
    - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        example: Orange
      description:
        type: string
        example: Phone operator
      department:
        type: string
        example: OIH
      manager:
        $ref: '#/definitions/User'
      shoots:
        $ref: '#/definitions/Shoot'
      contactDate:
        type: string
        example: 01-02-2018
  HistoryChange:
    type: object
    required:
    - field
    properties:
      id:
        type: integer
        format: int64
      field:
        type: string
        example: name
      newValue:
        type: string
        example: Orange Telecom
      history:
        $ref: '#/definitions/History'
  Notification:
    type: object
    required:
    - manager
    properties:
      id:
        type: integer
        format: int64
      manager:
        $ref: '#/definitions/User'
      employee:
        $ref: '#/definitions/Employee'
      besoin:
        $ref: '#/definitions/Besoin'
      dateCreated:
        type: string
        example: 01-02-2018
      seen:
        type: boolean
      seenRh:
        type: boolean
      seenDir:
        type: boolean
      rank:
        type: number
        format: float
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
# Added by API Auto Mocking Plugin
basePath: /v1
schemes:
 - https
 - http
# Added by API Auto Mocking Plugin
host: sample.com